[{"/Users/robudhabi/Documents/Development/albert-but-better/src/reportWebVitals.js":"1","/Users/robudhabi/Documents/Development/albert-but-better/src/App.js":"2","/Users/robudhabi/Documents/Development/albert-but-better/src/index.js":"3","/Users/robudhabi/Documents/Development/albert-but-better/src/components/Course.js":"4","/Users/robudhabi/Documents/Development/albert-but-better/src/components/CourseList.js":"5"},{"size":362,"mtime":1606492249058,"results":"6","hashOfConfig":"7"},{"size":9262,"mtime":1607359245808,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1606492249057,"results":"9","hashOfConfig":"7"},{"size":3705,"mtime":1607357101423,"results":"10","hashOfConfig":"7"},{"size":1253,"mtime":1607357492771,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16krt7o",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robudhabi/Documents/Development/albert-but-better/src/reportWebVitals.js",[],"/Users/robudhabi/Documents/Development/albert-but-better/src/App.js",["25","26","27","28","29"],"import { useEffect, useState } from 'react';\n\nimport './styles/App.css';\nimport userImage from \"./user-image.png\";\nimport searchIcon from \"./search.svg\";\nimport coursesInfo from \"./data/courses-info.json\";\nimport CourseList from \"./components/CourseList\";\n\nfunction App() {\n\n  const [coursesDBListDict, setCoursesDBListDict] = useState({});\n  const [userCourses, setUserCourses] = useState([]);\n  const [filteredCourses, setFilteredCourses] = useState([]);\n  const [courseSearchText, setCourseSearchText] = useState('');\n\n  const searchCourses = () => {\n    const query = courseSearchText.trim().toLowerCase();\n    if (query) {\n      let queriedCourses = [];\n      if (coursesDBListDict[query]) {\n        const courseInfo = coursesDBListDict[query];\n        const { timings } = courseInfo;\n\n        for (let i=0;i<timings.length;i++) {\n          queriedCourses.push({...courseInfo, timings: undefined, timing: timings[i]});\n        }\n      } else if (!coursesDBListDict[query]) {\n        queriedCourses = Object.keys(coursesDBListDict).map(courseID => {\n          if (coursesDBListDict[courseID].title.toLowerCase().includes(query)) {\n            return  coursesDBListDict[courseID];\n          }\n        }).filter(course => !!course);\n        let courseArr = [];\n        queriedCourses.forEach(course => {\n          const { timings } = course;\n          for (let i=0;i<timings.length;i++) {\n            courseArr.push({...course, timings: undefined, timing: timings[i]});\n          }\n        })\n        queriedCourses = courseArr;\n      }\n      setFilteredCourses(queriedCourses);\n    }\n  }\n\n  useEffect(() => {\n      let courseDBDict = {};\n      coursesInfo.forEach(course => {\n          const { Title, Description, CourseID, Instructor, Prerequisites, Corequisites, Timing, Status} = course;\n          const courseIdLower = CourseID.toLowerCase();\n          if (Status === \"Cancelled\") return;\n          if (!courseDBDict[courseIdLower]) {\n              // split the preqs into their own course IDs\n              const prereqs = Prerequisites.split(';').filter(str => !!str).map(str => str.trim()); \n              const coreqs = Corequisites.split(';').filter(str => !!str).map(str => str.trim());\n              const requirements = prereqs.filter(prereq => !coreqs.find(coreq => coreq === prereq)).concat(coreqs);\n              courseDBDict[courseIdLower] = {\n                  title: Title,\n                  description: Description,\n                  courseID: CourseID,\n                  instructor: Instructor,\n                  requirements,\n                  timings: [Timing]\n              };\n          } else {\n              courseDBDict[courseIdLower].timings.push(Timing);\n          }\n      });\n      const courses = [courseDBDict['cs-uh 1050']];\n      courses[0].timing = courses[0].timings[0];\n      courses[0].timings = undefined;\n      setUserCourses(courses);\n      setCoursesDBListDict(courseDBDict);\n  }, [])\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"header\">\n        <div className=\"user-header-info\">\n          <img src={userImage} className=\"user-header-img\"/>\n          <p className=\"user-name\">Sarah Fuller</p>\n        </div>\n        <div className=\"header-title-section\">\n          <p className=\"header-title\">NYU Albert Revamped</p>\n          {/* <p className=\"header-title-desc\">()</p> */}\n        </div>\n        <a className=\"logout-button\" href=\"#\">LOGOUT</a>\n      </div>\n      <div className=\"content-container\">\n        <div className=\"content-section main-content-section\">\n            <div className=\"content-section-left\">\n              <p className=\"courses-list-title\">MY COURSES</p>\n              <CourseList courses={userCourses}/>\n            </div>\n            <div className=\"content-section-right\">\n              <div className=\"timetable\">\n                <div className=\"timetable-hour-mark\">\n                  <div className=\"hour-title\">TIME</div>\n                  <div className=\"hour\">8:00 AM</div>\n                  <div className=\"hour\">9:00 AM</div>\n                  <div className=\"hour\">10:00 AM</div>\n                  <div className=\"hour\">11:00 AM</div>\n                  <div className=\"hour\">12:00 PM</div>\n                  <div className=\"hour\">1:00 PM</div>\n                  <div className=\"hour\">2:00 PM</div>\n                  <div className=\"hour\">3:00 PM</div>\n                  <div className=\"hour\">4:00 PM</div>\n                  <div className=\"hour\">5:00 PM</div>\n                  <div className=\"hour\">6:00 PM</div>\n                  <div className=\"hour\">7:00 PM</div>\n                </div>\n                <div className=\"timetable-day\">\n                  <p className=\"day-name\">Sunday</p>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                </div>\n                <div className=\"timetable-day\">\n                  <p className=\"day-name\">Monday</p>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                </div>\n                <div className=\"timetable-day\">\n                  <p className=\"day-name\">Tuesday</p>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                </div>\n                <div className=\"timetable-day\">\n                  <p className=\"day-name\">Wednesday</p>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                </div>\n                <div className=\"timetable-day\">\n                  <p className=\"day-name\">Thursday</p>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                  <div className=\"hour-block\"></div>\n                </div>\n              </div>\n            </div>\n        </div>\n        <div className=\"content-section\">\n          <p className=\"section-title-text\">Shopping List</p>\n          <div className=\"content-section-action\">\n            <input className=\"course-search-input\" type=\"text\" value={courseSearchText} onChange={event => setCourseSearchText(event.target.value)} placeholder=\"Enter course name or course ID: (example CS-UH 1001)...\" />\n            <a className=\"course-search-submit\">\n              <img src={searchIcon} className=\"search-icon\" onClick={searchCourses}/>\n            </a>\n          </div>\n          <div className=\"content-section-body\">\n            {\n              filteredCourses.length > 0 ? (<CourseList courses={filteredCourses} />) : null\n            }\n          </div>\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","/Users/robudhabi/Documents/Development/albert-but-better/src/index.js",[],["30","31"],"/Users/robudhabi/Documents/Development/albert-but-better/src/components/Course.js",["32"],"import \"../styles/course.css\"\nimport { useState, useEffect } from 'react';\nimport Modal from \"react-modal\"\n\nModal.setAppElement('#root');\n\nconst modalStyles = {\n    content : {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      margin: 50,\n      backgroundColor: '#440079',\n      color: '#fff'\n    }\n};\n\nconst Course = props => {\n\n    const [title, setTitle] = useState('TITLE');\n    const [courseID, setCourseID] = useState();\n    const [instructor, setInstructor] = useState();\n    const [description, setDescription] = useState('DESCRIPTION');\n    const [timing, setTiming] = useState('TIMING');\n    const [lectureNum, setLectureNum] = useState(1);\n    const [labNum, setLabNum] = useState(0);\n    const [component, setComponent] = useState('');\n    const [requirements, setRequirements] = useState([]);\n\n    const [showModal, setShowModal] = useState(false);\n\n    const showDescriptionModal = () => {\n        setShowModal(true);\n    };\n\n    const closeDescriptionModal = () => {\n        setShowModal(false);\n    };\n\n    useEffect(() => {\n        setTitle(props.title);\n        setCourseID(props.courseID);\n        setInstructor(props.instructor);\n        setDescription(props.description);\n        setTiming(props.timing);\n        setRequirements(props.requirements);\n        setLectureNum(props.lectureNum);\n        setLabNum(props.labNum);\n        setComponent(props.component);\n    }, [props])\n\n    return (\n        <div className=\"course-main-container\">\n            <div className=\"course-header\">\n                <p className=\"course-title\">{title}</p>\n                <p className=\"course-header-important\">{courseID}</p>\n                <p className=\"course-header-important\">{instructor}</p>\n                <p className=\"course-timing\">{timing}</p>\n            </div>\n            <div className=\"course-body\">\n                <div className=\"course-info\">\n                    <div className=\"course-desc\" onClick={showDescriptionModal}>\n                        <p className=\"course-desc-text\">Click to see course description</p>\n                    </div>\n                    <Modal\n                        isOpen={showModal}\n                        onRequestClose={closeDescriptionModal}\n                        contentLabel={\"Course Description\"}\n                        style={modalStyles}\n                    >\n                        <p>{description}</p>\n                    </Modal>\n                    <div className=\"course-detail-container\">\n                        <div className=\"lecture-detail\">\n                            Lecture {lectureNum}\n                        </div>\n                        {   labNum > 0 ?\n                             <div className=\"lecture-detail\">\n                                Lab {labNum}\n                            </div>\n                            : null\n                        }\n                       \n                    </div>\n                </div>\n                {\n                    requirements.length > 0 \n                    ? (\n                        <>\n                            <div className=\"separator\" />\n                            <span style={{fontWeight: \"bold\", marginTop: 5}} >Requirements</span>\n                            <div className=\"requirements-container\">\n                                { requirements.map((req, ind) => <p style={{fontSize: 11, margin: 3}} key={ind}>{`${ind+1}) ${req}`} </p> ) }\n                            </div>\n                        </>\n                       )\n                    : null\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Course;","/Users/robudhabi/Documents/Development/albert-but-better/src/components/CourseList.js",[],{"ruleId":"33","severity":1,"message":"34","line":28,"column":70,"nodeType":"35","messageId":"36","endLine":28,"endColumn":72},{"ruleId":"37","severity":1,"message":"38","line":80,"column":11,"nodeType":"39","endLine":80,"endColumn":61},{"ruleId":"40","severity":1,"message":"41","line":87,"column":9,"nodeType":"39","endLine":87,"endColumn":47},{"ruleId":"40","severity":1,"message":"42","line":194,"column":13,"nodeType":"39","endLine":194,"endColumn":49},{"ruleId":"37","severity":1,"message":"38","line":195,"column":15,"nodeType":"39","endLine":195,"endColumn":86},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":30,"column":12,"nodeType":"49","messageId":"50","endLine":30,"endColumn":21},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'component' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]