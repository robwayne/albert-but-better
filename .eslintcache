[{"/Users/robudhabi/Documents/Development/albert-but-better/src/reportWebVitals.js":"1","/Users/robudhabi/Documents/Development/albert-but-better/src/App.js":"2","/Users/robudhabi/Documents/Development/albert-but-better/src/index.js":"3","/Users/robudhabi/Documents/Development/albert-but-better/src/components/Course.js":"4","/Users/robudhabi/Documents/Development/albert-but-better/src/components/CourseList.js":"5","/Users/robudhabi/Documents/Development/albert-but-better/src/components/TimeTable.js":"6","/Users/robudhabi/Documents/Development/albert-but-better/src/components/Timetable.js":"7"},{"size":362,"mtime":1606492249058,"results":"8","hashOfConfig":"9"},{"size":7458,"mtime":1607415082794,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1606492249057,"results":"11","hashOfConfig":"9"},{"size":4024,"mtime":1607372335685,"results":"12","hashOfConfig":"9"},{"size":1459,"mtime":1607368394738,"results":"13","hashOfConfig":"9"},{"size":4758,"mtime":1607378053908,"results":"14","hashOfConfig":"9"},{"size":3940,"mtime":1607413089757,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"16krt7o",{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/Users/robudhabi/Documents/Development/albert-but-better/src/reportWebVitals.js",[],["34","35"],"/Users/robudhabi/Documents/Development/albert-but-better/src/App.js",["36","37","38","39","40","41","42","43"],"/Users/robudhabi/Documents/Development/albert-but-better/src/index.js",[],["44","45"],"/Users/robudhabi/Documents/Development/albert-but-better/src/components/Course.js",["46"],"import \"../styles/course.css\"\nimport { useState, useEffect } from 'react';\nimport Modal from \"react-modal\"\n\nModal.setAppElement('#root');\n\nconst modalStyles = {\n    content : {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      margin: 50,\n      backgroundColor: '#440079',\n      color: '#fff'\n    }\n};\n\nconst Course = props => {\n\n    const [title, setTitle] = useState('TITLE');\n    const [courseID, setCourseID] = useState();\n    const [instructor, setInstructor] = useState();\n    const [description, setDescription] = useState('DESCRIPTION');\n    const [timing, setTiming] = useState('TIMING');\n    const [lectureNum, setLectureNum] = useState(1);\n    const [labNum, setLabNum] = useState(0);\n    const [component, setComponent] = useState('');\n    const [isAdded, setIsAdded] = useState(false);\n    const [requirements, setRequirements] = useState([]);\n\n    const [showModal, setShowModal] = useState(false);\n\n    const showDescriptionModal = () => {\n        setShowModal(true);\n    };\n\n    const closeDescriptionModal = () => {\n        setShowModal(false);\n    };\n\n    useEffect(() => {\n        setTitle(props.title);\n        setCourseID(props.courseID);\n        setInstructor(props.instructor);\n        setDescription(props.description);\n        setTiming(props.timing);\n        setRequirements(props.requirements);\n        setLectureNum(props.lectureNum);\n        setLabNum(props.labNum);\n        setComponent(props.component);\n        setIsAdded(props.added);\n    }, [props])\n\n    return (\n        <div className=\"course-main-container\">\n            <div className=\"course-header\">\n                <div className=\"header-button\" onClick={() => { isAdded ? props.removeCourseHandler(courseID) : props.addCourseHandler(courseID, lectureNum-1) }}>\n                    <p>{isAdded ? \"x\" : \"+\"}</p>\n                </div>\n                <p className=\"course-title\">{title}</p>\n                <p className=\"course-header-important\">{courseID}</p>\n                <p className=\"course-header-important\">{instructor}</p>\n                <p className=\"course-timing\">{timing}</p>\n            </div>\n            <div className=\"course-body\">\n                <div className=\"course-info\">\n                    <div className=\"course-desc\" onClick={showDescriptionModal}>\n                        <p className=\"course-desc-text\">Click to see course description</p>\n                    </div>\n                    <Modal\n                        isOpen={showModal}\n                        onRequestClose={closeDescriptionModal}\n                        contentLabel={\"Course Description\"}\n                        style={modalStyles}\n                    >\n                        <p>{description}</p>\n                    </Modal>\n                    <div className=\"course-detail-container\">\n                        <div className=\"lecture-detail\">\n                            Lecture {lectureNum}\n                        </div>\n                        {   labNum > 0 ?\n                             <div className=\"lecture-detail\">\n                                Lab {labNum}\n                            </div>\n                            : null\n                        }\n                       \n                    </div>\n                </div>\n                {\n                    requirements.length > 0 \n                    ? (\n                        <>\n                            <div className=\"separator\" />\n                            <span style={{fontWeight: \"bold\", marginTop: 5}} >Requirements</span>\n                            <div className=\"requirements-container\">\n                                { requirements.map((req, ind) => <p style={{fontSize: 11, margin: 3}} key={ind}>{`${ind+1}) ${req}`} </p> ) }\n                            </div>\n                        </>\n                       )\n                    : null\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Course;","/Users/robudhabi/Documents/Development/albert-but-better/src/components/CourseList.js",[],"/Users/robudhabi/Documents/Development/albert-but-better/src/components/TimeTable.js",[],"/Users/robudhabi/Documents/Development/albert-but-better/src/components/Timetable.js",["47","48","49"],"import { useEffect, useState } from \"react\";\n\nimport '../styles/timetable.css';\n\nconst Timetable = ({userCourses}) => {\n\n    const dayIndicesMap = {\n        'Sun': 0,\n        'Mon': 1, \n        'Tue': 2, \n        'Wed': 3, \n        'Thu': 4, \n    }\n\n    const weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday'];\n    const startOfWorkDay = 9; // day starts at \n    const classHours = [\n        '9:00 AM', \n        '10:00 AM', \n        '11:00 AM', \n        '1:00 PM', \n        '2:00 PM',\n        '3:00 PM',\n        '4:00 PM',\n        '5:00 PM',\n        '6:00 PM',\n    ];\n\n    const validate = (courseTimings) => {\n        const timingDict = {};\n        let valid = true;\n        courseTimings.forEach(ct => {\n            for (let i=0;i<weekDays;i++) {\n                if (timingDict[i] !== undefined) {\n                    if (timingDict[i] === ct.times[i]) { valid = false; break; }\n                } else {\n                    timingDict[i] = ct.times[i];\n                }\n            }\n            if (!valid) return;\n        })\n        return valid;\n    }\n\n    const parseTiming = timing => {\n        const [days, startHour,,,endHour,] = timing.trim().split(' ');\n        const [day1, day2] = days.trim().split(',');\n        const dayIndex = dayIndicesMap[day1.trim()];\n        const hr = parseInt(startHour.trim()) < startOfWorkDay ? parseInt(startHour.trim()) + 12 : parseInt(startHour.trim());\n        const startHourIndex = hr - startOfWorkDay; \n        let times = {[day1]: {start: startHour, end: endHour}};\n        if (day2) {\n            times[day2.trim()] = {start: startHour, end: endHour};\n        }\n\n        return times;\n    }\n\n    const [coursesToRender, setCoursesToRender] = useState([]);\n    \n    useEffect(() => {\n        console.log(userCourses)\n        let userCourseTimings = userCourses.map(({timing, courseID}) => {\n            const times = parseTiming(timing);\n            return {times, courseID};\n        })\n\n        if (userCourseTimings && userCourseTimings.length) { \n            if (validate(userCourseTimings)) {\n                setCoursesToRender(userCourseTimings);\n            } else {\n                alert('It seems some of the courses you have chosen clash/overlap. Check them again before enrolling!')\n            }\n            // alert('It seems some of the courses you have chosen clash/overlap. Check them again before enrolling!')\n        }\n    }, [userCourses]);\n\n    return (\n        <div className=\"timetable\">\n            <div className=\"timetable-hour-mark\">\n                <div className=\"hour-title\">TIME</div>\n                { classHours.map((hour, index) => <div key={index*17} className=\"hour\">{hour}</div>) }\n            </div>\n            {\n                weekDays.map((day, dayIndex) => {\n                    const takenCourses = coursesToRender.filter(c => c.times[dayIndex] !== undefined);\n   \n                    return (\n                        <div key={dayIndex} className=\"timetable-day\">\n                            <p className=\"day-name\">{day}</p>\n                            { \n                                classHours.map((_, hourIndex) => {\n                                    const takenCourse = takenCourses.find(c => c.times[dayIndex] === hourIndex);\n                                    if (takenCourse) {\n                                        return (\n                                            <div key={hourIndex*13} className=\"taken\" >\n                                                {takenCourse.courseID}\n                                            </div>\n                                        )\n                                    }\n                                    return <div key={hourIndex*13} className=\"hour-block\" />\n                                }) \n                            }\n                        </div>\n                    )\n                })\n            }\n        </div>\n    );   \n}\n\nexport default Timetable;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":30,"column":70,"nodeType":"56","messageId":"57","endLine":30,"endColumn":72},{"ruleId":"58","severity":1,"message":"59","line":76,"column":9,"nodeType":"60","messageId":"61","endLine":76,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":82,"column":11,"nodeType":"60","messageId":"61","endLine":82,"endColumn":25},{"ruleId":"58","severity":1,"message":"63","line":126,"column":17,"nodeType":"60","messageId":"61","endLine":126,"endColumn":24},{"ruleId":"64","severity":1,"message":"65","line":137,"column":11,"nodeType":"66","endLine":137,"endColumn":61},{"ruleId":"67","severity":1,"message":"68","line":143,"column":9,"nodeType":"66","endLine":143,"endColumn":47},{"ruleId":"67","severity":1,"message":"69","line":159,"column":13,"nodeType":"66","endLine":159,"endColumn":49},{"ruleId":"64","severity":1,"message":"65","line":160,"column":15,"nodeType":"66","endLine":160,"endColumn":86},{"ruleId":"50","replacedBy":"70"},{"ruleId":"52","replacedBy":"71"},{"ruleId":"58","severity":1,"message":"72","line":30,"column":12,"nodeType":"60","messageId":"61","endLine":30,"endColumn":21},{"ruleId":"58","severity":1,"message":"73","line":48,"column":15,"nodeType":"60","messageId":"61","endLine":48,"endColumn":23},{"ruleId":"58","severity":1,"message":"62","line":50,"column":15,"nodeType":"60","messageId":"61","endLine":50,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":76,"column":8,"nodeType":"76","endLine":76,"endColumn":21,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'parseTiming' is assigned a value but never used.","Identifier","unusedVar","'startHourIndex' is assigned a value but never used.","'timings' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["78"],["79"],"'component' is assigned a value but never used.","'dayIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'parseTiming' and 'validate'. Either include them or remove the dependency array.","ArrayExpression",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [parseTiming, userCourses, validate]",{"range":"83","text":"84"},[2411,2424],"[parseTiming, userCourses, validate]"]